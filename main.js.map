{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///crypto (ignored)","webpack:///node-fetch (ignored)","webpack:///util (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".error {\\n    color: red;\\n  }\\n  \\ntable, th, td, tr {\\n    border: 1px solid black;\\n  }\\n  \\ntable.center {\\n    margin-left:auto; \\n    margin-right:auto;\\n  }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0VBQ1o7O0FBRUY7SUFDSSx1QkFBdUI7RUFDekI7O0FBRUY7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0VBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3Ige1xuICAgIGNvbG9yOiByZWQ7XG4gIH1cbiAgXG50YWJsZSwgdGgsIHRkLCB0ciB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gIH1cblxudGFibGUuY2VudGVyIHtcbiAgICBtYXJnaW4tbGVmdDphdXRvOyBcbiAgICBtYXJnaW4tcmlnaHQ6YXV0bztcbiAgfVxuIl19 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2 style=\\\"text-align:center\\\">\\n    {{title}}\\n  </h2>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 col-md-offset-3\\\">\\n    <form [formGroup]=\\\"classifierForm\\\">\\n      <div class=\\\"form-group\\\" style=\\\"text-align:center\\\">\\n        <input #file type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"preview(file.files)\\\" class=\\\"form-control\\\" formControlName=\\\"photo\\\">\\n          <button type=\\\"submit\\\" (click)=\\\"classifyImage(classifierForm.value)\\\" class=\\\"btn btn-primary\\\">Predict</button>\\n      </div>\\n      <div style=\\\"text-align:center\\\">\\n        <img id=\\\"img\\\" [src]=\\\"img\\\" height=\\\"200\\\" *ngIf=\\\"img\\\">\\n      </div>\\n      <div *ngIf=\\\"predictions\\\">\\n        <table class=\\\"center\\\">\\n          <tr>\\n            <th>Label</th>\\n            <th>Percent</th>\\n          </tr>\\n            <tr>\\n              <td class=\\\"td\\\">{{predictions[0].className}}</td>\\n              <td class=\\\"td\\\">{{predictions[0].probability | percent}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"td\\\">{{predictions[1].className}}</td>\\n              <td class=\\\"td\\\">{{predictions[1].probability | percent}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"td\\\">{{predictions[2].className}}</td>\\n              <td class=\\\"td\\\">{{predictions[2].probability | percent}}</td>\\n            </tr>\\n        </table>\\n      </div>\\n      <div style=\\\"text-align:center\\\">\\n        <label class=\\\"error\\\">{{errorMessage}}</label>\\n        <label class=\\\"success\\\">{{successMessage}}</label>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport * as mobilenet from '@tensorflow-models/mobilenet';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private errorMessage: string = '';\n  private img: any;\n  private reader = new FileReader();\n  private net: mobilenet.MobileNet;\n  private predictions: any;\n  \n  private title = 'Image Classifier';\n  private classifierForm: FormGroup;\n\n  constructor(private fb: FormBuilder){\n    this.classifierForm = this.fb.group({\n      photo: ['', Validators.nullValidator]\n    });\n  }\n\n  async ngOnInit() {\n    console.log('Loading mobilenet..');\n    this.net = await mobilenet.load();\n    console.log('Mobilenet successfully loaded');\n  }\n\n  async classifyImage(value){\n    const imageElement =  <HTMLImageElement>document.getElementById('img');\n\n    if(imageElement == null){\n      this.errorMessage = \"Please select an image!\";\n      return;\n    }\n\n    this.predictions = await this.net.classify(imageElement);\n  }\n\n  preview(files) {\n    if (files.length === 0){\n      return;\n    }\n \n    var mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/) == null) {\n      this.errorMessage = \"Only images are supported.\";\n      return;\n    }\n   \n    this.reader.readAsDataURL(files[0]); \n    this.reader.onload = (event) => { \n        this.img = this.reader.result;\n    }\n\n    this.predictions = null;\n    this.errorMessage = null;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}